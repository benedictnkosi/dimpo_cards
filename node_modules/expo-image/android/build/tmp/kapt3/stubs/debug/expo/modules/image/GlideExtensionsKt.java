package expo.modules.image;

@kotlin.Metadata(mv = {1, 9, 0}, k = 2, xi = 48, d1 = {"\u00002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u000b\n\u0002\u0018\u0002\n\u0002\b\u0002\u001a&\u0010\u0000\u001a\b\u0012\u0004\u0012\u0002H\u00020\u0001\"\u0004\b\u0000\u0010\u0002*\b\u0012\u0004\u0012\u0002H\u00020\u00012\b\u0010\u0003\u001a\u0004\u0018\u00010\u0004\u001ax\u0010\u0005\u001a\b\u0012\u0004\u0012\u0002H\u00020\u0001\"\u0004\b\u0000\u0010\u0002\"\u0004\b\u0001\u0010\u0006\"\u0004\b\u0002\u0010\u0007*\b\u0012\u0004\u0012\u0002H\u00020\u00012\b\u0010\b\u001a\u0004\u0018\u0001H\u00062\b\u0010\t\u001a\u0004\u0018\u0001H\u00072/\u0010\n\u001a+\u0012\n\u0012\b\u0012\u0004\u0012\u0002H\u00020\u0001\u0012\u0004\u0012\u0002H\u0006\u0012\u0004\u0012\u0002H\u0007\u0012\n\u0012\b\u0012\u0004\u0012\u0002H\u00020\u00010\u000b\u00a2\u0006\u0002\b\fH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0002\u0010\r\u001ab\u0010\u0005\u001a\b\u0012\u0004\u0012\u0002H\u00020\u0001\"\u0004\b\u0000\u0010\u0002\"\u0004\b\u0001\u0010\u000e*\b\u0012\u0004\u0012\u0002H\u00020\u00012\b\u0010\u000f\u001a\u0004\u0018\u0001H\u000e2)\u0010\n\u001a%\u0012\n\u0012\b\u0012\u0004\u0012\u0002H\u00020\u0001\u0012\u0004\u0012\u0002H\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u0002H\u00020\u00010\u0010\u00a2\u0006\u0002\b\fH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0002\u0010\u0011\u001aI\u0010\u0005\u001a\b\u0012\u0004\u0012\u0002H\u00020\u0001\"\u0004\b\u0000\u0010\u0002*\b\u0012\u0004\u0012\u0002H\u00020\u00012\u0006\u0010\u0012\u001a\u00020\u00132#\u0010\n\u001a\u001f\u0012\n\u0012\b\u0012\u0004\u0012\u0002H\u00020\u0001\u0012\n\u0012\b\u0012\u0004\u0012\u0002H\u00020\u00010\u0014\u00a2\u0006\u0002\b\f\u001aD\u0010\u0005\u001a\u00020\u0004\"\u0004\b\u0000\u0010\u0002*\u00020\u00042\b\u0010\u000f\u001a\u0004\u0018\u0001H\u00022\u001d\u0010\n\u001a\u0019\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u0002H\u0002\u0012\u0004\u0012\u00020\u00040\u0010\u00a2\u0006\u0002\b\fH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0002\u0010\u0015\u001a1\u0010\u0005\u001a\u00020\u0004*\u00020\u00042\u0006\u0010\u0012\u001a\u00020\u00132\u0017\u0010\n\u001a\u0013\u0012\u0004\u0012\u00020\u0004\u0012\u0004\u0012\u00020\u00040\u0014\u00a2\u0006\u0002\b\fH\u0086\b\u00f8\u0001\u0000\u0082\u0002\u0007\n\u0005\b\u009920\u0001\u00a8\u0006\u0016"}, d2 = {"apply", "Lcom/bumptech/glide/RequestBuilder;", "T", "options", "Lcom/bumptech/glide/request/RequestOptions;", "customize", "P1", "P2", "first", "second", "block", "Lkotlin/Function3;", "Lkotlin/ExtensionFunctionType;", "(Lcom/bumptech/glide/RequestBuilder;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Lcom/bumptech/glide/RequestBuilder;", "P", "value", "Lkotlin/Function2;", "(Lcom/bumptech/glide/RequestBuilder;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Lcom/bumptech/glide/RequestBuilder;", "when", "", "Lkotlin/Function1;", "(Lcom/bumptech/glide/request/RequestOptions;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Lcom/bumptech/glide/request/RequestOptions;", "expo-image_debug"})
public final class GlideExtensionsKt {
    
    /**
     * Conditionally applies the block to the RequestBuilder if the condition is true.
     */
    @org.jetbrains.annotations.NotNull()
    public static final <T extends java.lang.Object>com.bumptech.glide.RequestBuilder<T> customize(@org.jetbrains.annotations.NotNull()
    com.bumptech.glide.RequestBuilder<T> $this$customize, boolean when, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function1<? super com.bumptech.glide.RequestBuilder<T>, ? extends com.bumptech.glide.RequestBuilder<T>> block) {
        return null;
    }
    
    /**
     * Conditionally applies the block to the RequestBuilder if the value is not null.
     */
    @org.jetbrains.annotations.NotNull()
    public static final <T extends java.lang.Object, P extends java.lang.Object>com.bumptech.glide.RequestBuilder<T> customize(@org.jetbrains.annotations.NotNull()
    com.bumptech.glide.RequestBuilder<T> $this$customize, @org.jetbrains.annotations.Nullable()
    P value, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function2<? super com.bumptech.glide.RequestBuilder<T>, ? super P, ? extends com.bumptech.glide.RequestBuilder<T>> block) {
        return null;
    }
    
    /**
     * Conditionally applies the block to the RequestBuilder if both values aren't null.
     */
    @org.jetbrains.annotations.NotNull()
    public static final <T extends java.lang.Object, P1 extends java.lang.Object, P2 extends java.lang.Object>com.bumptech.glide.RequestBuilder<T> customize(@org.jetbrains.annotations.NotNull()
    com.bumptech.glide.RequestBuilder<T> $this$customize, @org.jetbrains.annotations.Nullable()
    P1 first, @org.jetbrains.annotations.Nullable()
    P2 second, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function3<? super com.bumptech.glide.RequestBuilder<T>, ? super P1, ? super P2, ? extends com.bumptech.glide.RequestBuilder<T>> block) {
        return null;
    }
    
    /**
     * Conditionally applies the block to the RequestOptions if the condition is true.
     */
    @org.jetbrains.annotations.NotNull()
    public static final com.bumptech.glide.request.RequestOptions customize(@org.jetbrains.annotations.NotNull()
    com.bumptech.glide.request.RequestOptions $this$customize, boolean when, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function1<? super com.bumptech.glide.request.RequestOptions, ? extends com.bumptech.glide.request.RequestOptions> block) {
        return null;
    }
    
    /**
     * Conditionally applies the block to the RequestOptions if the value is not null.
     */
    @org.jetbrains.annotations.NotNull()
    public static final <T extends java.lang.Object>com.bumptech.glide.request.RequestOptions customize(@org.jetbrains.annotations.NotNull()
    com.bumptech.glide.request.RequestOptions $this$customize, @org.jetbrains.annotations.Nullable()
    T value, @org.jetbrains.annotations.NotNull()
    kotlin.jvm.functions.Function2<? super com.bumptech.glide.request.RequestOptions, ? super T, ? extends com.bumptech.glide.request.RequestOptions> block) {
        return null;
    }
    
    @org.jetbrains.annotations.NotNull()
    public static final <T extends java.lang.Object>com.bumptech.glide.RequestBuilder<T> apply(@org.jetbrains.annotations.NotNull()
    com.bumptech.glide.RequestBuilder<T> $this$apply, @org.jetbrains.annotations.Nullable()
    com.bumptech.glide.request.RequestOptions options) {
        return null;
    }
}